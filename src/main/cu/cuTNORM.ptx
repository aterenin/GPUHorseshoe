//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-20633761
// Cuda compilation tools, release 7.5, V7.5.26
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_35
.address_size 64

	// .weak	cudaMalloc

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	cuda_onesided_unitvar_tnorm
.visible .entry cuda_onesided_unitvar_tnorm(
	.param .u32 cuda_onesided_unitvar_tnorm_param_0,
	.param .u64 cuda_onesided_unitvar_tnorm_param_1,
	.param .u64 cuda_onesided_unitvar_tnorm_param_2,
	.param .u64 cuda_onesided_unitvar_tnorm_param_3
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<148>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r2, [cuda_onesided_unitvar_tnorm_param_0];
	ld.param.u64 	%rd3, [cuda_onesided_unitvar_tnorm_param_1];
	ld.param.u64 	%rd4, [cuda_onesided_unitvar_tnorm_param_2];
	ld.param.u64 	%rd5, [cuda_onesided_unitvar_tnorm_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB6_7;

	cvta.to.global.u64 	%rd6, %rd4;
	cvt.s64.s32	%rd1, %r1;
	cvta.to.global.u64 	%rd7, %rd5;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.u32 	%r6, [%rd9];
	setp.eq.s32	%p2, %r6, 1;
	selp.f32	%f1, 0f3F800000, 0fBF800000, %p2;
	add.s64 	%rd10, %rd6, %rd8;
	ld.global.f32 	%f21, [%rd10];
	mul.f32 	%f2, %f21, %f1;
	neg.f32 	%f22, %f2;
	abs.f32 	%f23, %f22;
	setp.gt.f32	%p3, %f23, 0f41680000;
	mov.b32 	 %r7, %f22;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, 1097334784;
	mov.b32 	 %f24, %r9;
	selp.f32	%f25, %f24, %f22, %p3;
	mov.f32 	%f26, 0fBF3504F3;
	mul.rn.f32 	%f3, %f25, %f26;
	neg.f32 	%f27, %f3;
	fma.rn.f32 	%f28, %f25, %f26, %f27;
	mov.f32 	%f29, 0fB24FE77A;
	fma.rn.f32 	%f4, %f25, %f29, %f28;
	add.rn.f32 	%f5, %f3, %f4;
	abs.f32 	%f30, %f5;
	add.f32 	%f16, %f30, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f15,%f16;
	// inline asm
	add.f32 	%f31, %f30, 0fC0800000;
	mul.rn.f32 	%f32, %f31, %f15;
	add.f32 	%f33, %f32, 0f3F800000;
	mov.f32 	%f34, 0fC0800000;
	fma.rn.f32 	%f35, %f34, %f33, %f30;
	neg.f32 	%f36, %f32;
	fma.rn.f32 	%f37, %f36, %f30, %f35;
	fma.rn.f32 	%f38, %f15, %f37, %f32;
	mov.f32 	%f39, 0f3BE6E05B;
	mov.f32 	%f40, 0f3A69A091;
	fma.rn.f32 	%f41, %f40, %f38, %f39;
	mov.f32 	%f42, 0fBC81FB4B;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mov.f32 	%f44, 0f3D15373B;
	fma.rn.f32 	%f45, %f43, %f38, %f44;
	mov.f32 	%f46, 0fBD887C5A;
	fma.rn.f32 	%f47, %f45, %f38, %f46;
	mov.f32 	%f48, 0f3DC021D5;
	fma.rn.f32 	%f49, %f47, %f38, %f48;
	mov.f32 	%f50, 0fBDCED424;
	fma.rn.f32 	%f51, %f49, %f38, %f50;
	mov.f32 	%f52, 0f3D8B74DE;
	fma.rn.f32 	%f53, %f51, %f38, %f52;
	mov.f32 	%f54, 0f3C7BF170;
	fma.rn.f32 	%f55, %f53, %f38, %f54;
	mov.f32 	%f56, 0fBE0EF8D4;
	fma.rn.f32 	%f57, %f55, %f38, %f56;
	mov.f32 	%f58, 0f3F9DD2C9;
	fma.rn.f32 	%f59, %f57, %f38, %f58;
	mov.f32 	%f60, 0f3F800000;
	mov.f32 	%f61, 0f40000000;
	fma.rn.f32 	%f18, %f61, %f30, %f60;
	// inline asm
	rcp.approx.ftz.f32 %f17,%f18;
	// inline asm
	mul.rn.f32 	%f62, %f59, %f17;
	mul.f32 	%f63, %f62, 0fC0000000;
	fma.rn.f32 	%f64, %f30, %f63, %f59;
	sub.f32 	%f65, %f64, %f62;
	fma.rn.f32 	%f66, %f65, %f17, %f62;
	mul.f32 	%f67, %f30, %f30;
	neg.f32 	%f68, %f67;
	mul.f32 	%f69, %f67, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f70, %f69;
	mov.f32 	%f71, 0fBF317200;
	fma.rn.f32 	%f72, %f70, %f71, %f68;
	mov.f32 	%f73, 0fB5BFBE8E;
	fma.rn.f32 	%f74, %f70, %f73, %f72;
	mul.f32 	%f20, %f74, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f19,%f20;
	// inline asm
	add.f32 	%f75, %f70, 0f00000000;
	ex2.approx.f32 	%f76, %f75;
	mul.f32 	%f77, %f19, %f76;
	neg.f32 	%f78, %f30;
	fma.rn.f32 	%f79, %f78, %f30, %f67;
	fma.rn.f32 	%f80, %f77, %f79, %f77;
	mul.f32 	%f81, %f66, %f80;
	setp.gt.f32	%p4, %f30, 0f4120E148;
	selp.f32	%f82, 0f00000000, %f81, %p4;
	setp.lt.f32	%p5, %f5, 0f00000000;
	sub.f32 	%f83, %f61, %f82;
	selp.f32	%f146, %f83, %f82, %p5;
	setp.geu.f32	%p6, %f25, 0fBF800000;
	@%p6 bra 	BB6_3;

	sub.f32 	%f84, %f3, %f5;
	add.rn.f32 	%f85, %f84, %f4;
	mul.f32 	%f86, %f5, 0fC0000000;
	mul.f32 	%f87, %f86, %f146;
	fma.rn.f32 	%f146, %f87, %f85, %f146;

BB6_3:
	cvta.to.global.u64 	%rd11, %rd3;
	mul.f32 	%f88, %f146, 0f3F000000;
	sub.f32 	%f90, %f60, %f88;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd2, %rd11, %rd12;
	ld.global.f32 	%f91, [%rd2];
	fma.rn.f32 	%f92, %f91, %f90, %f88;
	add.f32 	%f9, %f92, %f92;
	neg.f32 	%f10, %f9;
	add.rn.f32 	%f11, %f61, %f10;
	setp.le.f32	%p7, %f9, 0f3FFF9097;
	setp.ge.f32	%p8, %f9, 0f3B5ED289;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	BB6_5;
	bra.uni 	BB6_4;

BB6_5:
	mul.rn.f32 	%f120, %f11, %f9;
	// inline asm
	lg2.approx.ftz.f32 %f119,%f120;
	// inline asm
	neg.f32 	%f121, %f119;
	mov.f32 	%f122, 0f3221F645;
	mov.f32 	%f123, 0fAF8A6370;
	fma.rn.f32 	%f124, %f123, %f121, %f122;
	mov.f32 	%f125, 0fB4016FDA;
	fma.rn.f32 	%f126, %f124, %f121, %f125;
	mov.f32 	%f127, 0f3468F846;
	fma.rn.f32 	%f128, %f126, %f121, %f127;
	mov.f32 	%f129, 0f370742AA;
	fma.rn.f32 	%f130, %f128, %f121, %f129;
	mov.f32 	%f131, 0fB804DB4D;
	fma.rn.f32 	%f132, %f130, %f121, %f131;
	mov.f32 	%f133, 0fBA4AFEA1;
	fma.rn.f32 	%f134, %f132, %f121, %f133;
	mov.f32 	%f135, 0f3BB5C027;
	fma.rn.f32 	%f136, %f134, %f121, %f135;
	mov.f32 	%f137, 0f3E24AE0F;
	fma.rn.f32 	%f138, %f136, %f121, %f137;
	mov.f32 	%f139, 0f3F62DFC4;
	fma.rn.f32 	%f140, %f138, %f121, %f139;
	fma.rn.f32 	%f147, %f140, %f10, %f140;
	bra.uni 	BB6_6;

BB6_4:
	setp.gt.f32	%p10, %f9, 0f3F800000;
	selp.f32	%f98, %f11, %f9, %p10;
	lg2.approx.f32 	%f99, %f98;
	neg.f32 	%f95, %f99;
	// inline asm
	rsqrt.approx.ftz.f32 %f94,%f95;
	// inline asm
	mov.f32 	%f100, 0f42FEF829;
	mov.f32 	%f101, 0fC27C73F1;
	fma.rn.f32 	%f102, %f101, %f94, %f100;
	mov.f32 	%f103, 0fC2E4361C;
	fma.rn.f32 	%f104, %f102, %f94, %f103;
	mov.f32 	%f105, 0f42714D9B;
	fma.rn.f32 	%f106, %f104, %f94, %f105;
	mov.f32 	%f107, 0fC1AE51B3;
	fma.rn.f32 	%f108, %f106, %f94, %f107;
	mov.f32 	%f109, 0f40CEF504;
	fma.rn.f32 	%f110, %f108, %f94, %f109;
	mov.f32 	%f111, 0fBFEA9E05;
	fma.rn.f32 	%f112, %f110, %f94, %f111;
	mov.f32 	%f113, 0fBCF871F4;
	fma.rn.f32 	%f114, %f112, %f94, %f113;
	mov.f32 	%f115, 0f3F553775;
	fma.rn.f32 	%f116, %f114, %f94, %f115;
	// inline asm
	rcp.approx.ftz.f32 %f96,%f94;
	// inline asm
	mul.rn.f32 	%f117, %f116, %f96;
	neg.f32 	%f118, %f117;
	selp.f32	%f147, %f118, %f117, %p10;

BB6_6:
	mul.f32 	%f141, %f147, 0fBFB504F3;
	mov.f32 	%f142, 0f00000000;
	add.rn.f32 	%f143, %f141, %f142;
	add.f32 	%f144, %f2, %f143;
	mul.f32 	%f145, %f1, %f144;
	st.global.f32 	[%rd2], %f145;

BB6_7:
	ret;
}


